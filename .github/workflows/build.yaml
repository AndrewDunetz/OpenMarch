name: Build/release

on:
    push:
        branches:
            - main
            - master
            - updater

jobs:
    release:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os:
                    - macos-latest
                    # - ubuntu-latest
                    # - windows-latest # Skip windows for now to figure out canvas dependencies

        steps:
            - name: Check out Git repository
              uses: actions/checkout@v1

            - name: Install canvas dependencies (macOS)
              if: startsWith(matrix.os, 'macos')
              run: brew install pkg-config cairo pango libpng jpeg giflib librsvg pixman python-setuptools

            - name: Install Node.js, NPM
              uses: actions/setup-node@v1
              with:
                  node-version: 22

            - name: Install canvas dependencies (Ubuntu)
              if: startsWith(matrix.os, 'ubuntu')
              run: sudo apt-get install build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

            - name: Prepare for app notarization
              if: startsWith(matrix.os, 'macos')
              # Import Apple API key for app notarization on macOS
              run: |
                  mkdir -p ~/private_keys/
                  echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

            # - name: Install Xcode Tools
            #   if: startsWith(matrix.os, 'macos')
            #   run: |
            #       xcode-select --install
            #       sudo xcodebuild -license accept

            - name: Build/release Electron app
              uses: samuelmeuli/action-electron-builder@v1.6.0
              with:
                  # GitHub token, automatically provided to the action
                  # (No need to define this secret in the repo settings)
                  github_token: ${{ secrets.github_token }}

                  # If the commit is tagged with a version (e.g. "v1.0.0"),
                  # release the app after building
                  release: ${{ startsWith(github.ref, 'refs/tags/v') }}
                  # mac_certs: ${{ secrets.mac_certs }}
                  # mac_certs_password: ${{ secrets.mac_certs_password }}
              env:
                  DEBUG: "electron-builder"
                  APPLE_API_KEY: ${{ secrets.apple_api_key }}
                  APPLE_API_KEY_ID: ${{ secrets.apple_api_key_id }}
                  APPLE_API_KEY_ISSUER: ${{ secrets.apple_api_key_issuer }}

            - name: Check for notarization-error.log
              if: failure()
              run: |
                  if [ -f notarization-error.log ]; then
                    echo "Notarization log found:"
                    cat notarization-error.log
                  else
                    echo "Notarization log not found."
                  fi
